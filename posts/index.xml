<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Posts on MaZiYo's Blog</title><link>https://dmaziyo.github.io/posts/</link><description>Recent content in Posts on MaZiYo's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 21 Oct 2023 10:04:48 +0800</lastBuildDate><atom:link href="https://dmaziyo.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>浅入Github Action</title><link>https://dmaziyo.github.io/posts/github-action/</link><pubDate>Sat, 21 Oct 2023 10:04:48 +0800</pubDate><guid>https://dmaziyo.github.io/posts/github-action/</guid><description>背景：因为第一次部署博客在GitHub上，想要实现自动化更新部署，但是由于不熟悉GitHub actions，所以写下本篇浅入一下。
一、什么是Github actions? 简单来说，就是由GitHub作为平台提供给开发者自动化工作流的方案，其中比较常见的工作流就是CI/CD
二、常见的工作流有哪些？ 用户提交issue -&amp;gt; 检测是否重要/次要 -&amp;gt; 是否可重现 -&amp;gt;分配给相应的contributer 提交pull request -&amp;gt; review code -&amp;gt; 合并分支 合并分支 -&amp;gt; 测试 -&amp;gt; 构建 -&amp;gt;部署 而action的出现就是为了自动化上述操作。 三、Github actions的工作原理 事件监听-&amp;gt;执行工作流 四、为什么选择Github actions? 代码大部分时间是部署在GitHub上的，所以无需接入其他第三方CI/CD tool 不需要去手动安装环境，可以自定义指定环境版本 GitHub提供了一个官方市场，可以复用其他人的actions 五、workflow文件语法 name: Greeting from Mona #定义workflow名称，可选参数 # 定义trigger event on: push: branches:[ master ] pull_request: branches:[ master ] jobs: my-job: name: My Job runs-on: ubuntu-latest #指定运行的虚拟机环境 steps: - name: Print a greeting # 指定环境变量 env: MY_VAR: Hi there!</description></item></channel></rss>